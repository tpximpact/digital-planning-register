# This file is part of the Digital Planning Register project.
#
# Digital Planning Register is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Digital Planning Register is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Digital Planning Register. If not, see <https://www.gnu.org/licenses/>.

#  does setup and caches node_modules
# runs lint, then unit then builds app and runs e2e and pa11y tests

name: Run tests

on:
  pull_request:
    branches:
      - "**" # Run on all branches for pull requests
  push:
    branches:
      - main # Run only on the main branch for pushes

env:
  TZ: Europe/London

jobs:
  setup:
    name: Setup and Cache Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: lts/iron

      - name: Cache npm dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        if: steps.cache-deps.outputs.cache-hit != 'true'

  lint-unit:
    name: Lint and Unit test code
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/iron

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Lint
        run: npm run lint

      - name: Unit
        run: npm run test:coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: tpximpact/digital-planning-register

  e2e-pa11y:
    name: Build application and run e2e and pa11y tests
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/iron

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Playwright Browsers
        run: npx playwright install chromium firefox --with-deps

      # - name: Setup application
      #   run: |
      #     cp .env.test .env

      - name: Build
        run: npm run build

      - name: Complete standalone build
        run: |
          cp -r public/ .next/standalone/public
          cp -r .next/static .next/standalone/.next

      # - name: Cache nextjs build
      #   id: cache-deps
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       .next/standalone
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-

      - name: Run application
        run: |
          node --env-file=.env.test .next/standalone/server.js &

      - name: Wait for application to be ready
        run: |
          # Wait for a few seconds to ensure the application is ready
          sleep 10
          # Optionally, you can add a curl command to check if the application is up
          curl -f http://localhost:3000 || exit 1

      - name: Run pa11y tests
        run: |
          npm run pa11y

      - name: Run e2e tests
        run: |
          npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-screenshots
          path: screenshots/
          retention-days: 30

  # e2e-pa11y:
  #   name: Run pa11y and e2e tests
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: lts/iron

  #     - name: Restore npm cache
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.npm
  #           node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: Restore nextjs build
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           .next/standalone
  #         key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
  #         restore-keys: |
  #           ${{ runner.os }}-nextjs-

  #     - name: Setup application
  #       run: |
  #         cp .env.test .env

  #     - name: Run application
  #       run: |
  #         node .next/standalone/server.js &

  #     - name: Wait for application to be ready
  #       run: |
  #         # Wait for a few seconds to ensure the application is ready
  #         sleep 10
  #         # Optionally, you can add a curl command to check if the application is up
  #         curl -f http://localhost:3000 || exit 1

  #     - name: Run pa11y tests
  #       run: |
  #         npm run pa11y

  #     - name: Install Playwright Browsers
  #       run: npx playwright install chromium firefox --with-deps

  #     - name: Run e2e tests
  #       run: |
  #         npx playwright test

  #     - uses: actions/upload-artifact@v4
  #       if: ${{ !cancelled() }}
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30

  #     - uses: actions/upload-artifact@v4
  #       if: ${{ !cancelled() }}
  #       with:
  #         name: playwright-screenshots
  #         path: screenshots/
  #         retention-days: 30
